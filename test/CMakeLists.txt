function(do_test name)
	add_test(NAME ${name} COMMAND xemmai --verbose "${CMAKE_CURRENT_SOURCE_DIR}/${name}.xm")
	add_test(NAME ${name}-collect COMMAND xemmai --verbose --collector-threshold=0 "${CMAKE_CURRENT_SOURCE_DIR}/${name}.xm")
	if(WIN32)
		add_test(NAME ${name}-debug COMMAND powershell -ExecutionPolicy ByPass -File "${CMAKE_CURRENT_SOURCE_DIR}/run-debug.ps1" "$<TARGET_FILE:xemmai>" "${CMAKE_CURRENT_SOURCE_DIR}/${name}.xm")
	else()
		add_test(NAME ${name}-debug COMMAND sh -c "'$<TARGET_FILE:xemmai>' --verbose --debug </dev/null '${CMAKE_CURRENT_SOURCE_DIR}/${name}.xm'")
	endif()
	set_tests_properties(${name} ${name}-collect ${name}-debug PROPERTIES ENVIRONMENT "XEMMAI_MODULE_PATH=$<TARGET_FILE_DIR:math>")
endfunction()
do_test(field)
do_test(flow)
do_test(flow2)
do_test(flow3)
do_test(flow4)
do_test(tail)
do_test(throw)
do_test(throw2)
do_test(throw3)
do_test(throw4)
do_test(throw5)
do_test(throw6)
do_test(throw7)
do_test(throw8)
do_test(throw9)
do_test(primitives)
do_test(operators)
do_test(indent)
do_test(errors)
do_test(call-errors)
do_test(race)
do_test(ring)
do_test(symbol)
do_test(fiber)
do_test(fiber2)
do_test(fiber3)
do_test(thread)
do_test(threading)
do_test(tuple)
do_test(variadic)
do_test(list)
do_test(map)
do_test(map2)
do_test(bytes)
do_test(file)
do_test(file2)
do_test(text)
do_test(path)
do_test(hanoi)
do_test(hanoi2)
do_test(hanoi4)
do_test(prime)
do_test(prime2)
do_test(prime3)
do_test(psmtp)
do_test(mandelbrot)
do_test(fix)
do_test(time)
do_test(totp)
function(do_test_output name)
	if(WIN32)
		add_test(NAME ${name} COMMAND powershell -ExecutionPolicy ByPass -File "${CMAKE_CURRENT_SOURCE_DIR}/run-xmo.ps1" "$<TARGET_FILE:xemmai>" "${CMAKE_CURRENT_SOURCE_DIR}/${name}.xm")
	else()
		add_test(NAME ${name} COMMAND "${CMAKE_CURRENT_SOURCE_DIR}/run-xmo" "$<TARGET_FILE:xemmai>" "${CMAKE_CURRENT_SOURCE_DIR}/${name}.xm")
	endif()
	set_property(TEST ${name} PROPERTY ENVIRONMENT "XEMMAI_MODULE_PATH=$<TARGET_FILE_DIR:math>")
endfunction()
do_test_output(dump)
do_test_output(dump2)
do_test_output(dump3)
do_test_output(fd)
function(do_test_debug name)
	if(WIN32)
		add_test(NAME ${name} COMMAND powershell -ExecutionPolicy ByPass -File "${CMAKE_CURRENT_SOURCE_DIR}/run-xmd.ps1" "$<TARGET_FILE:xemmai>" ${name}.xm)
	else()
		add_test(NAME ${name} COMMAND "${CMAKE_CURRENT_SOURCE_DIR}/run-xmd" "$<TARGET_FILE:xemmai>" ${name}.xm WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}")
	endif()
	set_property(TEST ${name} PROPERTY ENVIRONMENT "XEMMAI_MODULE_PATH=$<TARGET_FILE_DIR:math>")
endfunction()
do_test_debug(backtrace)
do_test_debug(hanoi3)
function(do_test_module module name)
	add_test(NAME ${module}/${name} COMMAND xemmai --verbose "${CMAKE_CURRENT_SOURCE_DIR}/${module}/${name}.xm")
	set_property(TEST ${module}/${name} PROPERTY ENVIRONMENT "XEMMAI_MODULE_PATH=$<JOIN:$<SHELL_PATH:$<TARGET_FILE_DIR:${module}>;$<TARGET_FILE_DIR:math>>,\\;>")
endfunction()
add_subdirectory(container)
do_test_module(container test)
add_subdirectory(callback)
do_test_module(callback test)
do_test_module(callback fiber)
do_test_module(callback fiber2)
add_subdirectory(enum)
do_test_module(enum test)
